generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Or another database provider like "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  userName    String        @unique // Ensure userName is unique
  password    String
  isAdmin     Boolean       @default(false)
  answers     UserAnswer[]
  QuizAttempt QuizAttempt[]
}

model Quiz {
  id          String        @id @default(uuid())
  name        String        @unique
  questions   Question[]
  // QuizAttempt QuizAttempt[]
  QuizAttempt QuizAttempt[]
}

model Question {
  id            String       @id @default(uuid())
  question      String
  optionA       String
  optionB       String
  optionC       String
  optionD       String
  correctOption String
  quizId        String // Ensure quizId is explicitly set as UUID
  quiz          Quiz         @relation(fields: [quizId], references: [id])
  answers       UserAnswer[]
}

model UserAnswer {
  id         String   @id @default(uuid())
  userId     String
  questionId String
  answer     String
  isCorrect  Boolean
  user       User     @relation(fields: [userId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])

  @@unique([userId, questionId]) // Ensures a user can answer a question only once
}

model QuizAttempt {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String
  quizId      String
  attemptDate DateTime @default(now())
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  UserName    String
  User        User[]

  @@unique([userId, quizId]) // Ensures a user can attempt the quiz only once
}
